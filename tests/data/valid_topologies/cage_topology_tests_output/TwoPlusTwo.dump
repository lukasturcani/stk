{
    "building_blocks": [
        {
            "class": "BuildingBlock",
            "func_groups": [
                "amine"
            ],
            "position_matrix": [
                [
                    -1.2248620549552753,
                    1.9164278499355547,
                    0.7210539471631342
                ],
                [
                    -1.2087281744281355,
                    0.4872590231699826,
                    0.48024693219699655
                ],
                [
                    -0.2937004615263848,
                    0.11468738714104383,
                    -0.6596961699694679
                ],
                [
                    -0.3120713771339078,
                    -1.3611562404749682,
                    -0.866456996947346
                ],
                [
                    0.11806702961323119,
                    -2.1179764651578217,
                    0.278043196496781
                ],
                [
                    1.088855329307079,
                    0.6847754866389764,
                    -0.4886913253178022
                ],
                [
                    1.7591369677170352,
                    0.25135995817328943,
                    0.6953690183413721
                ],
                [
                    -2.0066451459533865,
                    2.4096951347220275,
                    0.27552672685016744
                ],
                [
                    -1.0072954111204477,
                    2.1776392690732616,
                    1.6880707186266204
                ],
                [
                    -2.2546052861683625,
                    0.19532891568412494,
                    0.25893113552320274
                ],
                [
                    -0.9079749330882172,
                    -0.006808615219268601,
                    1.425976686767923
                ],
                [
                    -0.7177974361822215,
                    0.5877102566134272,
                    -1.5746215495892422
                ],
                [
                    -1.3579162774860782,
                    -1.663342188824874,
                    -1.0808138478226508
                ],
                [
                    0.2780434875043681,
                    -1.6529040727203752,
                    -1.7609295520820787
                ],
                [
                    -0.2917268311947272,
                    -3.093045285049252,
                    0.15902038918446557
                ],
                [
                    1.1550308775874987,
                    -2.2437821851314954,
                    0.33491351122064966
                ],
                [
                    1.7131686925587217,
                    0.5472333525754144,
                    -1.3941626883161833
                ],
                [
                    0.9536074837447741,
                    1.8025583263183957,
                    -0.4016485195657795
                ],
                [
                    2.752278157826003,
                    -0.014033630313960448,
                    0.4631724889732711
                ],
                [
                    1.765135363378401,
                    0.9783737228465494,
                    1.4466958982659786
                ]
            ],
            "atoms": "(N(0), C(1), C(2), C(3), N(4), C(5), N(6), H(7), H(8), H(9), H(10), H(11), H(12), H(13), H(14), H(15), H(16), H(17), H(18), H(19))",
            "bonds": "[Bond(0, 1, 1), Bond(1, 2, 1), Bond(2, 3, 1), Bond(3, 4, 1), Bond(2, 5, 1), Bond(5, 6, 1), Bond(0, 7, 1), Bond(0, 8, 1), Bond(1, 9, 1), Bond(1, 10, 1), Bond(2, 11, 1), Bond(3, 12, 1), Bond(3, 13, 1), Bond(4, 14, 1), Bond(4, 15, 1), Bond(5, 16, 1), Bond(5, 17, 1), Bond(6, 18, 1), Bond(6, 19, 1)]",
            "identity_key": "('amine', '[H]N([H])C([H])([H])C([H])(C([H])([H])N([H])[H])C([H])([H])N([H])[H]')",
            "test_attr1": "1232",
            "test_attr5": "'alpha'"
        },
        {
            "class": "BuildingBlock",
            "func_groups": [
                "aldehyde"
            ],
            "position_matrix": [
                [
                    -0.8437998355650485,
                    1.3315215197967558,
                    -1.8238140495212076
                ],
                [
                    -0.42082906217980764,
                    1.1402040602412584,
                    -0.6948194360445882
                ],
                [
                    -0.03009005294532406,
                    -0.23663370802826622,
                    -0.28708415238889295
                ],
                [
                    1.4012607117552638,
                    -0.27884380805383924,
                    0.10000713815515848
                ],
                [
                    2.235947218366322,
                    -0.9755780477071074,
                    -0.4517024737814236
                ],
                [
                    -0.9070286124117575,
                    -0.7079205917779342,
                    0.820316584687025
                ],
                [
                    -1.7855172458244324,
                    0.0193677143574001,
                    1.2485367446021367
                ],
                [
                    -0.3343345896640254,
                    1.9623159790795426,
                    -0.008095510328745961
                ],
                [
                    -0.19060988506444965,
                    -0.9436332247742168,
                    -1.13113857900301
                ],
                [
                    1.6962520681600304,
                    0.36812955796305924,
                    0.9381910031513676
                ],
                [
                    -0.8212507146267589,
                    -1.6789294510966568,
                    1.2896027304721869
                ]
            ],
            "atoms": "(O(0), C(1), C(2), C(3), O(4), C(5), O(6), H(7), H(8), H(9), H(10))",
            "bonds": "[Bond(0, 1, 2), Bond(1, 2, 1), Bond(2, 3, 1), Bond(3, 4, 2), Bond(2, 5, 1), Bond(5, 6, 2), Bond(1, 7, 1), Bond(2, 8, 1), Bond(3, 9, 1), Bond(5, 10, 1)]",
            "identity_key": "('aldehyde', '[H]C(=O)C([H])(C([H])=O)C([H])=O')",
            "test_attr5": "'alpha'"
        }
    ],
    "building_block_vertices": {
        "0": [
            0,
            1
        ],
        "1": [
            2,
            3
        ]
    },
    "building_block_counter": [
        2,
        2
    ],
    "construction_bonds": [
        40,
        41,
        42,
        43,
        44,
        45
    ],
    "class": "ConstructedMolecule",
    "position_matrix": [
        [
            6.820186570131727,
            -1.241624543902882e-16,
            -7.750226228108369
        ],
        [
            7.534430271694251,
            -0.8655593586005091,
            -6.8329286823395
        ],
        [
            8.99638709385784,
            -0.5064537701218688,
            -6.736590517621982
        ],
        [
            9.684482482108919,
            -1.4227094129840636,
            -5.783594044974571
        ],
        [
            9.155963435303752,
            -1.381511685586294,
            -4.446938906704779
        ],
        [
            9.204548885276633,
            0.952589813729349,
            -6.430708020792624
        ],
        [
            8.624698178078509,
            1.3815116855862957,
            -5.1982614386903485
        ],
        [
            7.405567970247926,
            -1.8985857999103917,
            -7.212815087988264
        ],
        [
            7.029474227004712,
            -0.7971359539125625,
            -5.84839948379677
        ],
        [
            9.433304993152401,
            -0.6814149695608753,
            -7.746139257007753
        ],
        [
            9.55336628463859,
            -2.4608906146910625,
            -6.1524369623162
        ],
        [
            10.78018931337368,
            -1.2422244493322627,
            -5.766705563943395
        ],
        [
            10.268859744473787,
            1.2502545314956095,
            -6.515569756455002
        ],
        [
            8.68245617588067,
            1.5189908330752877,
            -7.256490071047823
        ],
        [
            -6.820186570131727,
            1.1776077626549374e-16,
            -7.750226228108369
        ],
        [
            -7.5344302716942515,
            0.8655593586005081,
            -6.8329286823395
        ],
        [
            -8.996387093857841,
            0.5064537701218677,
            -6.736590517621982
        ],
        [
            -9.684482482108919,
            1.4227094129840638,
            -5.783594044974571
        ],
        [
            -9.155963435303752,
            1.3815116855862948,
            -4.44693890670478
        ],
        [
            -9.204548885276635,
            -0.9525898137293505,
            -6.430708020792623
        ],
        [
            -8.624698178078509,
            -1.3815116855862957,
            -5.1982614386903485
        ],
        [
            -7.405567970247927,
            1.8985857999103901,
            -7.212815087988263
        ],
        [
            -7.029474227004712,
            0.7971359539125622,
            -5.84839948379677
        ],
        [
            -9.433304993152401,
            0.6814149695608757,
            -7.746139257007753
        ],
        [
            -9.55336628463859,
            2.460890614691063,
            -6.1524369623162
        ],
        [
            -10.78018931337368,
            1.2422244493322627,
            -5.766705563943396
        ],
        [
            -10.268859744473788,
            -1.2502545314956095,
            -6.515569756455002
        ],
        [
            -8.68245617588067,
            -1.518990833075288,
            -7.256490071047822
        ],
        [
            1.2177488163706152,
            8.606198999961535,
            5.22442322727613
        ],
        [
            -0.008611898023543643,
            8.58083441031968,
            6.067040169184904
        ],
        [
            -1.2246674551175463,
            8.610672500291258,
            5.218096742438556
        ],
        [
            0.00691863874692866,
            7.383976683261196,
            6.952906603788813
        ],
        [
            1.407828355126068,
            7.829178027951409,
            4.506755317289009
        ],
        [
            -0.02508002530369654,
            9.46520598347582,
            6.742065005503287
        ],
        [
            -1.3412959757834002,
            7.779349785572299,
            4.508556778526487
        ],
        [
            -0.7762204171704729,
            7.142979128787047,
            7.659347639604286
        ],
        [
            1.2177488163706156,
            -8.606198999961535,
            5.22442322727613
        ],
        [
            -0.003933989213756511,
            -8.57615650150989,
            6.073655731267248
        ],
        [
            0.0032509311211198276,
            -7.382754114052593,
            6.954635577744559
        ],
        [
            -1.2209997474917371,
            -8.61189506949986,
            5.21636776848281
        ],
        [
            1.4317459455351491,
            -7.805260437542329,
            4.540579898024817
        ],
        [
            -0.04729690550583088,
            -9.487422863677955,
            6.710645592207811
        ],
        [
            0.030995833433794823,
            -6.407057976355104,
            6.449270466654955
        ],
        [
            -2.2325972996210797,
            -8.599356011237655,
            5.5997197005159896
        ]
    ],
    "topology_graph": "cage.TwoPlusTwo(vertex_alignments={0: 0, 1: 0, 2: 0, 3: 0})",
    "func_groups": "(FunctionalGroup(\n    atoms=( 0,  ), \n    bonders=( 0,  ), \n    deleters=(  ), \n    fg_type='amine'\n), FunctionalGroup(\n    atoms=( 4,  ), \n    bonders=( 4,  ), \n    deleters=(  ), \n    fg_type='amine'\n), FunctionalGroup(\n    atoms=( 6,  ), \n    bonders=( 6,  ), \n    deleters=(  ), \n    fg_type='amine'\n), FunctionalGroup(\n    atoms=( 14,  ), \n    bonders=( 14,  ), \n    deleters=(  ), \n    fg_type='amine'\n), FunctionalGroup(\n    atoms=( 18,  ), \n    bonders=( 18,  ), \n    deleters=(  ), \n    fg_type='amine'\n), FunctionalGroup(\n    atoms=( 20,  ), \n    bonders=( 20,  ), \n    deleters=(  ), \n    fg_type='amine'\n), FunctionalGroup(\n    atoms=( 28, 32 ), \n    bonders=( 28,  ), \n    deleters=(  ), \n    fg_type='aldehyde'\n), FunctionalGroup(\n    atoms=( 30, 34 ), \n    bonders=( 30,  ), \n    deleters=(  ), \n    fg_type='aldehyde'\n), FunctionalGroup(\n    atoms=( 31, 35 ), \n    bonders=( 31,  ), \n    deleters=(  ), \n    fg_type='aldehyde'\n), FunctionalGroup(\n    atoms=( 36, 40 ), \n    bonders=( 36,  ), \n    deleters=(  ), \n    fg_type='aldehyde'\n), FunctionalGroup(\n    atoms=( 38, 42 ), \n    bonders=( 38,  ), \n    deleters=(  ), \n    fg_type='aldehyde'\n), FunctionalGroup(\n    atoms=( 39, 43 ), \n    bonders=( 39,  ), \n    deleters=(  ), \n    fg_type='aldehyde'\n))",
    "atoms": "(N(0, building_block=0, building_block_id=0, some_prop='custom atom prop'), C(1, building_block=0, building_block_id=0), C(2, building_block=0, building_block_id=0), C(3, building_block=0, building_block_id=0), N(4, building_block=0, building_block_id=0), C(5, building_block=0, building_block_id=0), N(6, building_block=0, building_block_id=0), H(7, building_block=0, building_block_id=0), H(8, building_block=0, building_block_id=0), H(9, building_block=0, building_block_id=0), H(10, building_block=0, building_block_id=0), H(11, building_block=0, building_block_id=0), H(12, building_block=0, building_block_id=0), H(13, building_block=0, building_block_id=0), N(14, building_block=0, building_block_id=1), C(15, building_block=0, building_block_id=1), C(16, building_block=0, building_block_id=1), C(17, building_block=0, building_block_id=1), N(18, building_block=0, building_block_id=1), C(19, building_block=0, building_block_id=1), N(20, building_block=0, building_block_id=1), H(21, building_block=0, building_block_id=1), H(22, building_block=0, building_block_id=1), H(23, building_block=0, building_block_id=1), H(24, building_block=0, building_block_id=1), H(25, building_block=0, building_block_id=1), H(26, building_block=0, building_block_id=1), H(27, building_block=0, building_block_id=1), C(28, building_block=1, building_block_id=2), C(29, building_block=1, building_block_id=2), C(30, building_block=1, building_block_id=2), C(31, building_block=1, building_block_id=2), H(32, building_block=1, building_block_id=2), H(33, building_block=1, building_block_id=2), H(34, building_block=1, building_block_id=2), H(35, building_block=1, building_block_id=2), C(36, building_block=1, building_block_id=3), C(37, building_block=1, building_block_id=3), C(38, building_block=1, building_block_id=3), C(39, building_block=1, building_block_id=3), H(40, building_block=1, building_block_id=3), H(41, building_block=1, building_block_id=3), H(42, building_block=1, building_block_id=3), H(43, building_block=1, building_block_id=3))",
    "bonds": "(Bond(0, 1, 1), Bond(1, 2, 1), Bond(2, 3, 1, other_prop=1999), Bond(3, 4, 1), Bond(2, 5, 1), Bond(5, 6, 1), Bond(1, 7, 1), Bond(1, 8, 1), Bond(2, 9, 1), Bond(3, 10, 1), Bond(3, 11, 1), Bond(5, 12, 1), Bond(5, 13, 1), Bond(14, 15, 1), Bond(15, 16, 1), Bond(16, 17, 1), Bond(17, 18, 1), Bond(16, 19, 1), Bond(19, 20, 1), Bond(15, 21, 1), Bond(15, 22, 1), Bond(16, 23, 1), Bond(17, 24, 1), Bond(17, 25, 1), Bond(19, 26, 1), Bond(19, 27, 1), Bond(28, 29, 1), Bond(29, 30, 1), Bond(29, 31, 1), Bond(28, 32, 1), Bond(29, 33, 1), Bond(30, 34, 1), Bond(31, 35, 1), Bond(36, 37, 1), Bond(37, 38, 1), Bond(37, 39, 1), Bond(36, 40, 1), Bond(37, 41, 1), Bond(38, 42, 1), Bond(39, 43, 1), Bond(0, 14, 1), Bond(6, 28, 2), Bond(4, 36, 2), Bond(18, 30, 2), Bond(20, 39, 2), Bond(31, 38, 1))",
    "identity_key": "((('aldehyde', '[H]C(=O)C([H])(C([H])=O)C([H])=O'), ('amine', '[H]N([H])C([H])([H])C([H])(C([H])([H])N([H])[H])C([H])([H])N([H])[H]')), 'cage.TwoPlusTwo(vertex_alignments={0: 0, 1: 0, 2: 0, 3: 0})', ((('aldehyde', '[H]C(=O)C([H])(C([H])=O)C([H])=O'), (2, 3)), (('amine', '[H]N([H])C([H])([H])C([H])(C([H])([H])N([H])[H])C([H])([H])N([H])[H]'), (0, 1))))",
    "test_attr1": "'something'",
    "test_attr2": "12",
    "test_attr3": "['12', 'something', 21]"
}